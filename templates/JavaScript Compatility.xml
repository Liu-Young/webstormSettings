<templateSet group="JavaScript Compatility">
  <template name="requestAnimationFrameCompatility" value="(function() {&#10;        var lastTime = 0;&#10;        var vendors = ['webkit', 'moz'];&#10;        for(var x = 0; x &lt; vendors.length &amp;&amp; !window.requestAnimationFrame; ++x) {&#10;            window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];&#10;            window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||    // Webkit中此取消方法的名字变了&#10;              window[vendors[x] + 'CancelRequestAnimationFrame'];&#10;        }&#10;&#10;        if (!window.requestAnimationFrame) {&#10;            window.requestAnimationFrame = function(callback, element) {&#10;                var currTime = new Date().getTime();&#10;                var timeToCall = Math.max(0, 16.7 - (currTime - lastTime));&#10;                var id = window.setTimeout(function() {&#10;                    callback(currTime + timeToCall);&#10;                }, timeToCall);&#10;                lastTime = currTime + timeToCall;&#10;                return id;&#10;            };&#10;        }&#10;        if (!window.cancelAnimationFrame) {&#10;            window.cancelAnimationFrame = function(id) {&#10;                clearTimeout(id);&#10;            };&#10;        }&#10;    }());" description="requestAnimationFrame" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="Function After" value="Function.prototype.after = function(afterFn) {&#10;        var _self = this;&#10;        return function() {&#10;            var ret = _self.apply(this, arguments);&#10;            afterFn.apply(this, arguments);&#10;            return ret;&#10;        };&#10;    }" description="Function After" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="getSingle" value="var getSingle = function(fn) {&#10;        var result;&#10;        return function() {&#10;            return result || (result = fn.apply(this, arguments));&#10;        };&#10;    };" description="单例设计模式" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="isElement" value="function isElement(o) {&#10;  return (&#10;    typeof HTMLElement === &quot;object&quot; ? o instanceof HTMLElement :&#10;    typeof o === &quot;object&quot; &amp;&amp; o.nodeType === 1 &amp;&amp; typeof o.nodeName === &quot;string&quot;&#10;  );&#10;}" description="isElement" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>